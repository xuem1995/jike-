运用NumPy数组结构优点:
python本身的列表list的元素在系统内存中是分散存储的
NumPy数组存储在一个均匀连续的内存块中, 不需要像列表list对内存地址进行查找, 从而节省了计算资源.

一些技巧来提升内存和提高计算资源的利用率. 避免采用隐式拷贝,而是采用就地操作的方式: 写成x *=2 ,而不是y=x*2

NumPy中两个重要的对象:
ndarray(N-dimensional array object)解决了多维数组问题
ufunc(universal function object)解决对数组进行处理的函数

### ndarray对象如何创建数组, 如何处理结构数组

"""
1.创建数组
"""
import numpy as np
a = np.array([1,2,3])
b = np.array([[1,2,3],[4,5,6],[7,8,9]])
b[1,1]=10


###数组的大小
print(a.shape)
print(b.shape)

###元素的属性
print(a.dtype)
print(b)


"""
2.定义结构数组
  :用dtype定义结构类型,然后在定义数组的时候,用array中指定了结构数组的类型dtype=persontype
"""
import numpy as np
persontype = np.dtype({

    'names':['name','age','chinese','math','english'],
    'formats':['S32','i','i','i','f']})

peoples = np.array(
    [('ZhangFei',32,75,100,90),
     ('GuanYu',24,85,96,88.5),
     ('ZhaoYun',28,85,92,96.5),
     ('HuangZhong',29,65,85,100)],
    dtype = persontype)

ages = peoples[:]['age']
chineses = peoples[:]['chinese']
maths = peoples[:]['math']
englishs = peoples[:]['english']

print(np.mean(maths))
print(np.mean(chineses))
print(np.mean(englishs))

NumPy可以方便地创建连续数组

x1 = np.arange(1,11,2)   ###初始值,终值,步长
x2 = np.linspace(1,9,5)  ###初始值,终值,元素个数

算数运算
x1 = np.arange(1,11,2) 
x2 = np.linspace(1,9,5)

>>> print(np.add(x1,x2))  ##加法
[ 2.  6. 10. 14. 18.]
>>> print(np.subtract(x1,x2))  ##减法
[0. 0. 0. 0. 0.]
>>> print(np.multiply(x1,x2))  ##乘法
[ 1.  9. 25. 49. 81.]
>>> print(np.divide(x1,x2))  ##除法
[1. 1. 1. 1. 1.]
>>> print(np.power(x1,x2))  ## x1的x2次方
[1.00000000e+00 2.70000000e+01 3.12500000e+03 8.23543000e+05
 3.87420489e+08]
>>> print(np.remainder(x1,x2))  ##取余 等同于np.mod(x1,x2)
[0. 0. 0. 0. 0.]

计算数组/矩阵中的最大值函数amx(),最小值函数amin()
最大值与最小值之差ptp()
百分位数percentile()
中位数median()
平均数mean()
加权平均值average()
标准差std()
方差var()


NumPy排序
sort(a,axis=1,kind='quicksort',order=None)
快速排序:quicksort
合并排序:mergesort
堆排序:heapsort

>>> a = np.array([[4,3,2],[2,4,1]])
>>> a
array([[4, 3, 2],
       [2, 4, 1]])
>>> print(np.sort(a))  
[[2 3 4]
 [1 2 4]]
>>> print(np.sort(a,axis=None))
[1 2 2 3 4 4]
>>> print(np.sort(a,axis=0))  ##按行
[[2 3 1]
 [4 4 2]]
>>> print(np.sort(a,axis=1))  ##按列
[[2 3 4]
 [1 2 4]]


"""
练习
"""
import numpy as np

persontype = np.dtype(
     {
         'names':['name','chinese','english','math'],
         'formats':['S32','i','i','i']})

peoples = np.array(
     [('ZhangFei',66,65,30),
      ('GuanYu',95,85,98),
      ('ZhaoYun',93,92,96),
      ('HuangZhong',90,88,77),
      ('DianWei',80,90,90)],
     dtype = persontype)

 
